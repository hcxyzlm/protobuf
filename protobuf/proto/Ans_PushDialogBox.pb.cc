// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Ans_PushDialogBox.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

void protobuf_ShutdownFile_Ans_5fPushDialogBox_2eproto() {
  delete Ans_PushDialogBoxMsg::default_instance_;
}

void protobuf_AddDesc_Ans_5fPushDialogBox_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Ans_PushDialogBoxMsg::default_instance_ = new Ans_PushDialogBoxMsg();
  Ans_PushDialogBoxMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Ans_5fPushDialogBox_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Ans_5fPushDialogBox_2eproto {
  StaticDescriptorInitializer_Ans_5fPushDialogBox_2eproto() {
    protobuf_AddDesc_Ans_5fPushDialogBox_2eproto();
  }
} static_descriptor_initializer_Ans_5fPushDialogBox_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Ans_PushDialogBoxMsg::kParamsFieldNumber;
const int Ans_PushDialogBoxMsg::kContentFieldNumber;
const int Ans_PushDialogBoxMsg::kExtraFieldNumber;
#endif  // !_MSC_VER

Ans_PushDialogBoxMsg::Ans_PushDialogBoxMsg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void Ans_PushDialogBoxMsg::InitAsDefaultInstance() {
}

Ans_PushDialogBoxMsg::Ans_PushDialogBoxMsg(const Ans_PushDialogBoxMsg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void Ans_PushDialogBoxMsg::SharedCtor() {
  _cached_size_ = 0;
  params_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Ans_PushDialogBoxMsg::~Ans_PushDialogBoxMsg() {
  SharedDtor();
}

void Ans_PushDialogBoxMsg::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void Ans_PushDialogBoxMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Ans_PushDialogBoxMsg& Ans_PushDialogBoxMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Ans_5fPushDialogBox_2eproto();  return *default_instance_;
}

Ans_PushDialogBoxMsg* Ans_PushDialogBoxMsg::default_instance_ = NULL;

Ans_PushDialogBoxMsg* Ans_PushDialogBoxMsg::New() const {
  return new Ans_PushDialogBoxMsg;
}

void Ans_PushDialogBoxMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    params_ = 0;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  extra_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool Ans_PushDialogBoxMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 params = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &params_)));
          set_has_params();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }
      
      // required string content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_extra;
        break;
      }
      
      // repeated string extra = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extra()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_extra;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Ans_PushDialogBoxMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 params = 1;
  if (has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->params(), output);
  }
  
  // required string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(), output);
  }
  
  // repeated string extra = 3;
  for (int i = 0; i < this->extra_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->extra(i), output);
  }
  
}

int Ans_PushDialogBoxMsg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 params = 1;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->params());
    }
    
    // required string content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
  }
  // repeated string extra = 3;
  total_size += 1 * this->extra_size();
  for (int i = 0; i < this->extra_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extra(i));
  }
  
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ans_PushDialogBoxMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Ans_PushDialogBoxMsg*>(&from));
}

void Ans_PushDialogBoxMsg::MergeFrom(const Ans_PushDialogBoxMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  extra_.MergeFrom(from.extra_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_params()) {
      set_params(from.params());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
}

void Ans_PushDialogBoxMsg::CopyFrom(const Ans_PushDialogBoxMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ans_PushDialogBoxMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Ans_PushDialogBoxMsg::Swap(Ans_PushDialogBoxMsg* other) {
  if (other != this) {
    std::swap(params_, other->params_);
    std::swap(content_, other->content_);
    extra_.Swap(&other->extra_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Ans_PushDialogBoxMsg::GetTypeName() const {
  return "tutorial.Ans_PushDialogBoxMsg";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
